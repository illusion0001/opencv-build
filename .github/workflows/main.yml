name: Build OpenCV with QT+OGL Support for Windows

on: push

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set OpenCV Version
        run: echo opencv_ver="4.5.1" >> $env:GITHUB_ENV

      - name: Cache OpenCV
        uses: actions/cache@v1
        id: cache0
        with:
          path: C:\downloads\opencv-${{ env.opencv_ver }}
          key: ${{ runner.os }}OpenCV-BuildCache

      - name: Download OpenCV
        run: |
          mkdir C:\downloads
          $opencv_ver1=$env:opencv_ver
          curl -fL https://github.com/opencv/opencv/archive/${opencv_ver1}.zip -o C:\downloads\opencv-${opencv_ver1}.zip
          7z -r x C:\downloads\opencv-${opencv_ver1}.zip -oc:\downloads\
          echo OpenCV_DIR="C:\downloads\opencv-${opencv_ver1}" >> $env:GITHUB_ENV
          Remove-Item -Force C:\downloads\opencv-${opencv_ver1}.zip

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: C:\Qt
          key: ${{ runner.os }}-Qt-Cache

      - name: Download Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          version: 5.15.2
          arch: win64_mingw81
          dir: C:\
          tools: tools_ifw,4.1.1,qt.tools.ifw.41 tools_qtcreator,5.0.2-0,qt.tools.qtcreator,qt.tools.

      # Remote go brr
      - name: Compile OpenCV
        if: steps.cache0.outputs.cache-hit != 'true'
        run: |
          mkdir $env:OpenCV_DIR\build_64
          cmake -G "MinGW Makefiles" -S ${env:OpenCV_DIR}\ -B ${env:OpenCV_DIR}\build_64\ -D BUILD_JAVA=OFF -D WITH_QT=ON -D WITH_OPENGL=ON
          cd $env:OpenCV_DIR\build_64
          mingw32-make -j 8
          mingw32-make install

      - name: Package Prebuilt OpenCV
        run: |
          $opencv_ver1=$env:opencv_ver
          mkdir libbin
          cd c:\downloads
          7z a ${env:GITHUB_WORKSPACE}\libbin\opencv-${opencv_ver1}.7z -m0=LZMA2 -mx9

      - name: Upload Prebuilt OpenCV binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'
        run: gh release create $env:opencv_ver libbin\opencv-${env:opencv_ver}.7z --target $env:GITHUB_SHA -t "OpenCV ${env:opencv_ver} with QT+OGL Support for Windows"

