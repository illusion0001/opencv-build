name: Build OpenCV + Contrib for Windows

on: push

concurrency:
  group: ${{ github.ref }}-${{ github.event_name  }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set OpenCV Version
        run: |
          echo opencv_ver="4.7.0" >> $env:GITHUB_ENV
          echo opencv_install="D:\opencv-test\" >> $env:GITHUB_ENV

      - name: Download OpenCV
        run: |
          echo OpenCV_DIR="C:\downloads\opencv-${env:opencv_ver}" >> $env:GITHUB_ENV
          echo Contrib_DIR="C:\downloads\opencv_contrib-${env:opencv_ver}" >> $env:GITHUB_ENV
          mkdir C:\downloads
          curl -fL https://github.com/opencv/opencv/archive/${env:opencv_ver}.zip -o C:\downloads\opencv-${env:opencv_ver}.zip
          curl -fL https://github.com/opencv/opencv_contrib/archive/refs/tags/${env:opencv_ver}.zip -o C:\downloads\opencv-${env:opencv_ver}-contrib.zip
          7z -r x C:\downloads\opencv-${env:opencv_ver}.zip -oC:\downloads\
          7z -r x C:\downloads\opencv-${env:opencv_ver}-contrib.zip -oC:\downloads\
          ls "C:\downloads\opencv-${env:opencv_ver}"
          ls "C:\downloads\opencv_contrib-${env:opencv_ver}"
          ls "C:\downloads\opencv_contrib-${env:opencv_ver}\modules"

      - name: Configure OpenCV
        run: |
          mkdir ${env:OpenCV_DIR}\build_64
          mkdir "${env:opencv_install}"
          mkdir "${env:opencv_install}\pdb"
          cmake -G "Visual Studio 17 2022" -S ${env:OpenCV_DIR}\ -B ${env:OpenCV_DIR}\build_64\ `
          -DBUILD_opencv_core=ON `
          -DBUILD_opencv_features2d=ON `
          -DBUILD_opencv_calib3d=ON `
          -DBUILD_opencv_flann=ON `
          -DBUILD_opencv_imgproc=ON `
          -DBUILD_opencv_video=ON `
          -DBUILD_opencv_videoio=ON `
          -DBUILD_opencv_videoio=ON `
          -DBUILD_opencv_highgui=ON `
          -DBUILD_opencv_world=ON `
          -DWITH_OPENCL=ON `
          -DWITH_OPENCL_D3D11_NV=ON `
          -DWITH_OPENGL=ON `
          -DWITH_DIRECTX=ON `
          -DWITH_FFMPEG=ON `
          -DWITH_GSTREAMER=ON `
          -DCMAKE_BUILD_TYPE="Release" `
          -DCMAKE_INSTALL_PREFIX="${env:opencv_install}" `
          -DOPENCV_EXTRA_MODULES_PATH="${env:Contrib_DIR}\modules"

      - name: Build OpenCV
        run: |
          cmake --build "${env:OpenCV_DIR}\build_64\" --target install --config release
          # Copy-Item -Path ".\" -Include "*.pdb" -Destination "${env:opencv_install}\pdb" -Recurse -Force -PassThru

      - name: list pdb
        run: ls -R *.pdb

      - name: Package Prebuilt OpenCV
        working-directory: ${{ env.opencv_install }}
        run: |
          ls
          mkdir ${env:GITHUB_WORKSPACE}\libbin
          7z a ${env:GITHUB_WORKSPACE}\libbin\opencv-${env:opencv_ver}.7z -m0=LZMA2 -mx9

      - name: Upload Prebuilt OpenCV binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'
        run: |
          $CommitHash = git rev-parse --short=8 HEAD
          gh release create ${env:opencv_ver}-${CommitHash} ${env:GITHUB_WORKSPACE}\libbin\opencv-${env:opencv_ver}.7z --target $env:GITHUB_SHA -t "OpenCV ${env:opencv_ver} with QT+OGL Support for Windows"
